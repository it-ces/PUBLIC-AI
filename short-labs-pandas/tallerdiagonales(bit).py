# -*- coding: utf-8 -*-
"""tallerDiagonales(BIT).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Bur7IIahrXAziQ7nW1EMk5W4qmTBYtsN
"""

def vector(cols):
  """
  Retorna una lista con cols espacios vacios
  """
  lista = []
  for i in range(cols):
      lista.append(" ")
  return lista


def matrix(cols):   ##DIAGONAL INFERIOR IZQUIERDA
  mat = []
  for x in range(cols):
      mat.append(vector(cols))
  for i in range(cols):
    for j in range(i+1):
      if cols >= i:
        mat[i][j]="x"
      else:
        mat[i][j]=" "
  return mat
matrix(5)
def matrix(cols):   ##DIAGONAL SUPERIOR
  mat = []
  for x in range(cols):
      mat.append(vector(cols))
  for j in range(cols):
    for i in range(j+1):
      if cols >= j-i:
        mat[i][j]="X"
      else:
        mat[i][j]=" "
  return mat
matrix(5)
def matrix(cols):   ##DIAGONAL SUPERIOR IZQUIERDA
  mat = []
  for x in range(cols):
      mat.append(vector(cols))
  for j in range(cols):
    for i in range(cols-j):
      if cols >= j-i:
        mat[i][j]="X"
      else:
        mat[i][j]=" "
  return mat
matrix(5)
def matrix(cols):   ##DIAGONAL INFERIOR DERECHA
  mat = []
  for x in range(cols):
      mat.append(vector(cols))
  for i in range(cols):
    for j in range(cols):
      if cols-i <= j+1:
        mat[i][j]="x"
      else:
        mat[i][j]=" "
  return mat
matrix(5)

def vector(a,b, side='right'):
  vacio = []
  if side == 'right':
    for aux in range(a):
      if aux < b:
        vacio.append('x')
      else:
        vacio.append(" ")
    return vacio
  else:
    ...

# generalicemos

def DiagonalDerecha(filas):
  mat = []
  for x in range(1,filas+1):
    mat.append(vector(filas,x))
  return mat
DiagonalDerecha(5)


def DiagonalIzquierda(filas):
  mat = []
  for fila in range(filas):
    mat.append(vector(filas,filas-fila-1))
  return mat
DiagonalIzquierda(5)

vector(10,5)